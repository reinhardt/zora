from pymodbus.constants import Endian
from solaredge_modbus import SolarEdge
from solaredge_modbus import registerType
from solaredge_modbus import registerDataType


class KostalInverter(SolarEdge):
    wordorder = Endian.Little

    @property
    def registers(self):
        return {
            # name, address, length, register, type, target type, description, unit, batch
            "power_dc": (
                0x64,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total DC Power",
                "W",
                1,
            ),
            "own_consumption_battery": (
                0x6A,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Home own consumption from battery",
                "W",
                1,
            ),
            "own_consumption_grid": (
                0x6C,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Home own consumption from grid",
                "W",
                1,
            ),
            "total_consumption_battery": (
                0x6E,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total home consumption Battery",
                "Wh",
                1,
            ),
            "total_consumption_grid": (
                0x70,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total home consumption Grid",
                "Wh",
                1,
            ),
            "total_consumption_pv": (
                0x72,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total home consumption PV",
                "Wh",
                1,
            ),
            "own_consumption_pv": (
                0x74,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Home own consumption from PV",
                "W",
                1,
            ),
            "total_consumption": (
                0x76,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total home consumption",
                "Wh",
                1,
            ),
            "total_consumption_rate": (
                0x7C,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total home consumption rate",
                "%",
                1,
            ),
            "current_phase_1": (
                0x9A,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Current Phase 1",
                "A",
                1,
            ),
            "power_phase_1": (
                0x9C,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Active power Phase 1",
                "W",
                1,
            ),
            "voltage_phase_1": (
                0x9E,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Voltage Phase 1",
                "V",
                1,
            ),
            "current_phase_2": (
                0xA0,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Current Phase 2",
                "A",
                1,
            ),
            "power_phase_2": (
                0xA2,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Active power Phase 2",
                "W",
                1,
            ),
            "voltage_phase_2": (
                0xA4,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Voltage Phase 2",
                "V",
                1,
            ),
            "current_phase_3": (
                0xA6,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Current Phase 3",
                "A",
                1,
            ),
            "power_phase_3": (
                0xA8,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Active power Phase 3",
                "W",
                1,
            ),
            "voltage_phase_3": (
                0xAA,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Voltage Phase 3",
                "V",
                1,
            ),
            "total_ac_active_power": (
                0xAC,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total AC active power",
                "W",
                1,
            ),
            "total_ac_reactive_power": (
                0xAE,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total AC reactive power",
                "Var",
                1,
            ),
            "total_ac_apparent_power": (
                0xB2,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total AC apparent power",
                "VA",
                1,
            ),
            "battery_charge_current": (
                0xBE,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Battery charge current",
                "A",
                2,
            ),
            "battery_charge_current_actual": (
                0xC8,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Actual battery charge (-) / discharge (+) current",
                "A",
                2,
            ),
            "charge_state": (
                0xD2,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Act. state of charge",
                "%",
                2,
            ),
            "total_active_power_powermeter": (
                0xFC,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total active power (powermeter)",
                "W",
                2,
            ),
            "total_reactive_power_powermeter": (
                0xFE,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total reactive power (powermeter)",
                "Var",
                2,
            ),
            "total_apparent_power_powermeter": (
                0x100,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total apparent power (powermeter)",
                "VA",
                2,
            ),
            "current_dc_1": (
                0x102,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Current DC 1",
                "A",
                2,
            ),
            "power_dc_1": (
                0x104,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Power DC 1",
                "W",
                2,
            ),
            "voltage_dc_1": (
                0x10A,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Voltage DC 1",
                "V",
                2,
            ),
            "current_dc_2": (
                0x10C,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Current DC 2",
                "A",
                2,
            ),
            "power_dc_2": (
                0x10E,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Power DC 2",
                "W",
                2,
            ),
            "voltage_dc_2": (
                0x114,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Voltage DC 2",
                "V",
                2,
            ),
            "current_dc_3": (
                0x116,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Current DC 3",
                "A",
                2,
            ),
            "power_dc_3": (
                0x118,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Power DC 3",
                "W",
                2,
            ),
            "voltage_dc_3": (
                0x11E,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Voltage DC 3",
                "V",
                2,
            ),
            "total_yield": (
                0x140,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total yield",
                "Wh",
                3,
            ),
            "daily_yield": (
                0x142,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Daily yield",
                "Wh",
                3,
            ),
            "yearly_yield": (
                0x144,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Yearly yield",
                "Wh",
                3,
            ),
            "monthly_yield": (
                0x146,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Monthly yield",
                "Wh",
                3,
            ),
            "battery_charge_discharge": (
                0x246,
                1,
                registerType.HOLDING,
                registerDataType.INT16,
                int,
                "Actual battery charge/discharge power",
                "W",
                4,
            ),
            "total_dc_charge_energy": (
                0x416,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total DC charge energy (DC-side to battery)",
                "Wh",
                5,
            ),
            "total_dc_discharge_energy": (
                0x418,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total DC discharge energy (DC-side from battery)",
                "Wh",
                5,
            ),
            "total_ac_charge_energy": (
                0x41A,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total AC charge energy (AC-side to battery)",
                "Wh",
                5,
            ),
            "total_ac_discharge_energy": (
                0x41C,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total AC discharge energy (battery to grid)",
                "Wh",
                5,
            ),
            "total_ac_charge_energy_grid": (
                0x41E,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total AC charge energy (grid to battery)",
                "Wh",
                5,
            ),
            "total_dc_energy": (
                0x420,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total DC PV energy (sum of all PV inputs)",
                "Wh",
                5,
            ),
            "total_dc_energy_pv1": (
                0x422,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total DC energy from PV1",
                "Wh",
                5,
            ),
            "total_dc_energy_pv2": (
                0x424,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total DC energy from PV2",
                "Wh",
                5,
            ),
            "total_dc_energy_pv3": (
                0x426,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total DC energy from PV3",
                "Wh",
                5,
            ),
            "total_energy_ac_grid": (
                0x428,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total energy AC-side to grid",
                "Wh",
                5,
            ),
            "total_dc_power": (
                0x42A,
                2,
                registerType.HOLDING,
                registerDataType.FLOAT32,
                float,
                "Total DC power (sum of all PV inputs)",
                "Wh",
                5,
            ),
        }
